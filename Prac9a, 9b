practical 9a

Implement the following JPA applications with ORM and Hibernate. Q.9 a) Develop a JPA Application to demonstrate use of ORM associations. 
Same steps to be followed as 9b 
Index.jsp:- 

<%@page contentType="text/html" pageEncoding="UTF-8"%> 
<!DOCTYPE html> 
<html> 
    <head> 
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 

        <title>User View</title> 
    </head> 

   <body> 

        <form action="userview.jsp" > 

            User Name:- <input type="text" name="uname" maxlength="20"><br> 

            User Type:- <input type="text" name="utype" maxlength="35"> 

            <br><input type="submit" value="submit"> 

        </form> 

    </body> 

</html> 


Userview.jsp:- 

<%@page import="hibernet.User"%> 

<%@page contentType="text/html" pageEncoding="UTF-8"%> 

<%@page import="org.hibernate.SessionFactory"%> 

<%@page import="org.hibernate.Session"%> 

<%@page import="org.hibernate.cfg.Configuration"%> 

<%@page import="org.hibernate.Transaction"%> 

<%@page import="java.util.List"%> <%@page import="java.util.Iterator"%> <%! 

  SessionFactory sf;   org.hibernate.Session ss;   List<hibernet.User> ubook;   
%> 
<% 
    sf = new Configuration().configure().buildSessionFactory();     ss= sf.openSession();     Transaction tx=null;     User us= new User(); 

    try 

    {

        tx=ss.beginTransaction(); 

        String uname=request.getParameter("uname");         String utype=request.getParameter("utype");         us.setUname(uname);         us.setUtype(utype);         ss.save(us); 

     tx.commit();               
    } 
    catch(Exception e){ out.println("Error"+e.getMessage()); }      try 

    { 
        ss.beginTransaction(); 

        ubook=ss.createQuery("from User").list();
}     

    catch(Exception e){ }        

%> 

<html> 

<head> 

<title>User View</title> 

</head> 
<body> 

        User View   
        Click here to go <a href="index.jsp"> BACK </a> 

<br><br> 
<% 
           Iterator it=ubook.iterator();            while(it.hasNext()) 

           { 

              User eachrecord=(User)it.next();               out.print(eachrecord.getUid()+"   ");               out.print(eachrecord.getUname()+"<br>");               out.print(eachrecord.getUtype()+"<br><hr>"); 

           } 

        %> 

    </body> 

</html> User.java:- package hibernet; 

// Generated 4 Oct, 2018 8:02:52 AM by Hibernate Tools 4.3.1 /** 

 * User generated by hbm2java 

 */ 

public class User  implements java.io.Serializable  

{      private Integer uid;      private String uname;      private String utype;     public User() {}     public User(String uname, String utype) {        this.uname = uname; 

       this.utype = utype; 

    } 

    public Integer getUid() { 

        return this.uid; 

    } 

    public void setUid(Integer uid) { 

        this.uid = uid; 

    } 

    public String getUname() {         return this.uname; 

    } 

    public void setUname(String uname) { 

        this.uname = uname; 

    } 

    public String getUtype() { 

        return this.utype;    }

public void setUtype(String utype) { 
        this.utype = utype; 
    } } 














prac 9b 
code:
Index.jsp:-
<html><head> 
<title>Guest Book</title> 
</head> 
<body> 
Guest Book <hr><br><br> 
<form action="guestbookview.jsp" > 
            Name <input type="text" name="name" maxlength="20"><br> 
            Message <textarea rows="5" cols="40" maxlength="100" name="msg"></textarea> 
<br><input type="submit" value="submit"> 
</form> 
</body> 
</html> 
Guestbookview.jsp:- 
<%@page import="org.hibernate.SessionFactory"%> 
<%@page import="org.hibernate.Session"%> 
<%@page import="org.hibernate.cfg.Configuration"%> 
<%@page import="org.hibernate.Transaction"%> 
<%@page import="java.util.List"%> 
<%@page import="java.util.Iterator"%> <%@page import="hibernate.Guestbook"%> <%! 
  SessionFactory sf;   org.hibernate.Session ss; 
  List<hibernate.Guestbook> gbook;   
%> 
<% 
    sf = new Configuration().configure().buildSessionFactory();     ss= sf.openSession(); 
    Transaction tx=null; 
    Guestbook gb=new Guestbook();     try{ 
        tx=ss.beginTransaction(); 
        String name=request.getParameter("name"); 
        String msg=request.getParameter("msg");         String dt=new java.util.Date().toString();         gb.setName(name);         gb.setMsg(msg);         gb.setDt(dt);         ss.save(gb); 
        tx.commit();               
    } 
    catch(Exception e){ out.println("Error"+e.getMessage()); }      try{ 
        ss.beginTransaction(); 
        gbook=ss.createQuery("from Guestbook").list();         
    }     
    catch(Exception e){ }        
%> 
<html> 
<head> 
<title>Guest View</title> 
</head> 
<body> 
        Guest View    
        Click here to go <a href="index.jsp"> BACK </a> 
<br><br> 
<% Iterator it=gbook.iterator();            while(it.hasNext()) 

           { 

              Guestbook eachrecord=(Guestbook)it.next();               out.print(eachrecord.getDt()+"   ");               out.print(eachrecord.getName()+"<br>");               out.print(eachrecord.getMsg()+"<br><hr>"); 

           } 

        %> 

</body> 

</html> 

Guestbook.java:- package hibernate; 

// Generated 4 Oct, 2018 9:40:17 AM by Hibernate Tools 4.3.1 /** 

 * Guestbook generated by hbm2java 

 */ 

public class Guestbook  implements java.io.Serializable {      private Integer no;      private String name;      private String msg;      private String dt; 

    public Guestbook() { 

    } 

    public Guestbook(String name, String msg, String dt) {        this.name = name;        this.msg = msg;        this.dt = dt; 

    }    

    public Integer getNo() { 

        return this.no; 

    } 

    public void setNo(Integer no) { 

        this.no = no; 

    } 

    public String getName() {         return this.name; 

    } 

    public void setName(String name) { 

        this.name = name; 

    } 

    public String getMsg() {         return this.msg; 

    } 

    public void setMsg(String msg) { 

        this.msg = msg; 

    } 

    public String getDt() { 

        return this.dt; 

    } 

    public void setDt(String dt) { 

        this.dt = dt; 

    } 

} 





